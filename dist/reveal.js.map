{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear mumber\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// Copy the presentation-wide background to each page\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tconst scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( keyCode === 191 && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.0.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","undefined","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","charCodeAt","toString","toUpperCase","encodeRFC3986URI","decodeURI","join","isSpeakerNotes","video","muted","sourceElement","getMimeTypeFromFile","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","contentContainer","shouldAutoAnimateBetween","page","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","documentElement","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","right","up","Number","MAX_VALUE","down","includes","togglePause","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","viewport","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","isVertical","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","_len","_key","deck"],"mappings":"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","x_google_ignoreList":[2]}